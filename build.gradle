plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}
java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}
apply plugin: "io.spring.dependency-management"
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    // https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.2'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
    testImplementation 'org.springframework.security:spring-security-test:6.2.1'
    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    implementation 'org.mindrot:jbcrypt:0.4'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation 'io.jsonwebtoken:jjwt:0.12.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.2'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.2'
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation 'org.springframework:spring-context:6.1.3'
    // https://mvnrepository.com/artifact/org.springframework/spring-context-support
    implementation 'org.springframework:spring-context-support:6.1.3'
    // https://mvnrepository.com/artifact/jakarta.mail/jakarta.mail-api
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.13.2'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // https://mvnrepository.com/artifact/org.openkoreantext/open-korean-text
    implementation 'org.openkoreantext:open-korean-text:2.3.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.2'
    implementation 'com.querydsl:querydsl-core'
    // QueryDSL JPA 라이브러리
    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa

    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean { delete file(generated) }

tasks.named('test') {
    useJUnitPlatform()
}
